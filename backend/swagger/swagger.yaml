openapi: 3.0.0
info:
  title: E-Commerce API
  version: 1.0.0
  description: REST API for an e-commerce platform built with Node.js, Express, and PostgreSQL

servers:
  - url: http://localhost:3000
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserInput:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    UserLogin:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    Product:
      type: object
      required:
        - name
        - price
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float

    CartItem:
      type: object
      required:
        - productId
        - quantity
      properties:
        productId:
          type: integer
        quantity:
          type: integer

paths:
  /users:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        201:
          description: User created
        400:
          description: Invalid input

  /users/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials

  /products:
    get:
      summary: Get all products
      responses:
        200:
          description: List of products
    post:
      summary: Create a new product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        201:
          description: Product created
        401:
          description: Unauthorized
        403:
          description: Forbidden (Admin only)

  /products/{id}:
    get:
      summary: Get a product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Product found
        404:
          description: Product not found
    put:
      summary: Update a product
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Product updated
        401:
          description: Unauthorized
        403:
          description: Forbidden (Admin only)
    delete:
      summary: Delete a product
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Product deleted
        401:
          description: Unauthorized
        403:
          description: Forbidden (Admin only)

  /cart:
    get:
      summary: Get current user's cart
      security:
        - bearerAuth: []
      responses:
        200:
          description: Cart fetched
        401:
          description: Unauthorized
    post:
      summary: Add item to cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartItem"
      responses:
        201:
          description: Item added
        401:
          description: Unauthorized

  /cart/{itemId}:
    delete:
      summary: Remove item from cart
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Item removed
        401:
          description: Unauthorized

  /orders:
    get:
      summary: Get all orders for the current user
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of orders
        401:
          description: Unauthorized
    post:
      summary: Place an order
      security:
        - bearerAuth: []
      responses:
        201:
          description: Order placed
        401:
          description: Unauthorized

  /orders/{id}:
    get:
      summary: Get a specific order by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Order found
        401:
          description: Unauthorized
        404:
          description: Order not found
